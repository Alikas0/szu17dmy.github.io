{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u9996\u9875 \u4f24\u75d5\u7d2f\u7d2f\uff0c\u75db\u82e6\u7126\u8651\u5374\u4e0d\u7518\u5e73\u5eb8\u3002","title":"HOME"},{"location":"#_1","text":"\u4f24\u75d5\u7d2f\u7d2f\uff0c\u75db\u82e6\u7126\u8651\u5374\u4e0d\u7518\u5e73\u5eb8\u3002","title":"\u9996\u9875"},{"location":"about/","text":"\u5173\u4e8e \u4e00\u4e9b\u5de5\u7a0b\u8bb0\u5f55\u548c\u77e5\u8bc6\u5e93\u3002","title":"ABOUT"},{"location":"about/#_1","text":"\u4e00\u4e9b\u5de5\u7a0b\u8bb0\u5f55\u548c\u77e5\u8bc6\u5e93\u3002","title":"\u5173\u4e8e"},{"location":"ctf_writeup/cg_ctf/easyweb/","text":"","title":"\u7b7e\u5230\u9898"},{"location":"ctf_writeup/hackergame2018/cat_remote/","text":"\u732b\u54aa\u9065\u63a7\u5668 \u9898\u76ee SOURCE: https://hack2018.lug.ustc.edu.cn/#catremote \u63d0\u793a\uff1aflag \u683c\u5f0f\u4e3a flag{......}\uff0c\u53ea\u5305\u542b\u5b57\u6bcd\uff0c\u5176\u4e2d\u6709\u4e14\u53ea\u6709\u4e24\u4e2a\u4e3a\u5927\u5199\u5b57\u6bcd\u3002 \u4eca\u5929\u7684 App Store \u9996\u9875\u6545\u4e8b\u662f\u300a\u732b\u54aa\u5360\u9886\u4e16\u754c\u300b(\u8be6\u60c5)\u3002 SERIOUSLY? D \u540c\u5b66\u4e0d\u7981\u5f00\u59cb\u5e7b\u60f3\u88ab\u732b\u54aa\u5360\u9886\u7684\u4e16\u754c\uff1a\u96c6\u4e2d\u8425\u91cc\u6210\u7fa4\u7684\u94f2\u5c4e\u5b98\uff0c\u5bc6\u5bc6\u9ebb\u9ebb\u7684 Nepeta cataria\uff08Wikipedia\uff09\u519c\u7530\uff0c\u968f\u610f\u6446\u653e\u7684\u7eb8\u7bb1\u5b50\u5360\u6ee1\u4e86\u9053\u8def\u2026\u2026 \u60f3\u60f3\u5c31\u53ef\u6015\uff0c\u4e0d\u8fc7 D \u540c\u5b66\u77e5\u9053\u4eba\u7c7b\u8fd8\u6709\u7ec8\u6781\u79d8\u5bc6\u6b66\u5668\u53ef\u4ee5\u7528\u2014\u2014\u732b\u54aa\u9065\u63a7\u5668\uff0c\u6709\u4e86\u732b\u54aa\u9065\u63a7\u5668\uff0c\u518d\u591a\u7684\u732b\u54aa\u4e5f\u53ea\u4f1a\u4e56\u4e56\u5730\u542c\u4eba\u7c7b\u7684\u8bdd\uff0c\u54c8\u54c8\u54c8\u54c8\u54c8\uff5e \u4e0b\u9762\u662f\u5236\u4f5c\u732b\u54aa\u9065\u63a7\u5668\u7684\u6280\u672f\u603b\u7ed3\uff0c\u9700\u8981\u7684\u539f\u6599\u6709\uff1a 5mW 6mm \u70b9\u72b6\u6fc0\u5149\u4e8c\u6781\u7ba1\u4e00\u4e2a\uff1b \u9502\u7535\u6c60\u4e00\u4e2a\uff1b \u5bfc\u7ebf\u82e5\u5e72\uff1b \u7136\u540e\u7528\u5bfc\u7ebf\u5c06\u9502\u7535\u6c60\u548c\u6fc0\u5149\u4e8c\u6781\u7ba1\u8fde\u63a5\u8d77\u6765\uff08\u8fd9\u4e00\u6b65\u7684\u76ee\u7684\u662f\u8ba9\u4e8c\u6781\u7ba1\u4eae\u8d77\u6765\uff0c\u4e0d\u60f3\u4e8c\u6781\u7ba1\u4eae\u8d77\u6765\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u8fde\uff09\uff0c\u4e00\u4e2a\u7f8e\u5473\u7684\u732b\u54aa\u9065\u63a7\u5668\u5c31\u505a\u597d\u4e86\u3002 \u732b\u54aa\u9065\u63a7\u5668\u7684\u539f\u7406\u975e\u5e38\u7b80\u5355\uff01\u64b8\u732b\u5b66\u4f1a\u66fe\u7ecf\u6709\u8bba\u6587\u7ed9\u51fa\u8fc7\u7ed3\u8bba\uff1a\u6fc0\u5149\u7b14\u6307\u5411\u54ea\u91cc\uff0c\u732b\u54aa\u5c31\u4f1a\u8dd1\u5230\u54ea\u91cc\u3002 \u4e3a\u4e86\u62a5\u590d\u732b\u54aa\u628a\u81ea\u5df1\u7684\u4ee3\u7801\u6253\u4e71\uff08\u89c1\uff1a\u732b\u54aa\u4e0e\u952e\u76d8\uff09\uff0cD \u540c\u5b66\u628a\u732b\u54aa\u9065\u63a7\u5668\u7ed1\u5728\u53ef\u4ee5\u4e0a\uff08UP\uff09\u4e0b\uff08DOWN\uff09\u5de6\uff08LEFT\uff09\u53f3\uff08RIGHT\uff09\u79fb\u52a8\u7684\u4e09\u8f74\u673a\u68b0\u81c2\u4e0a\uff0c\u5f00\u59cb\u4f7f\u7528\u6811\u8393\u6d3e\uff08\u4e00\u6b3e\u57fa\u4e8e Linux \u7684\u5355\u7247\u673a\u8ba1\u7b97\u673a\uff09\u63a7\u5236\u4e09\u8f74\u673a\u68b0\u81c2\uff0c\u8fdb\u800c\u63a7\u5236\u732b\u54aa\u5728\u8349\u5730\u4e0a\u8dd1\u6765\u8dd1\u53bb\u3002 \u9644\u4ef6\u662f\u6811\u8393\u6d3e\u4e0a\u7559\u4e0b\u7684\u8c03\u8bd5\u8f93\u51fa\u4fe1\u606f\uff0c\u6211\u4eec\u8d76\u5230\u73b0\u573a\u65f6\u53ea\u5269\u4e0b\u8fd9\u4e2a\u4e86\u3002 \u89e3\u51b3\u65b9\u6848 \u6253\u5f00\u6587\u6863\u53d1\u73b0\u4e3a\u56db\u4e2a\u65b9\u5411\u7684\u5b57\u6bcd\uff0c\u731c\u60f3\u753b\u51fa\u8be5\u8def\u7ebf\u5373\u53ef\u83b7\u5f97flag\u3002\u8fd9\u91cc\u4f7f\u7528OpenCV\u8f85\u52a9\u753b\u56fe\uff0c\u4f5c\u56fe\u540e\u5373\u53ef\u53d1\u73b0flag\u3002 #include <iostream> #include <fstream> #include <opencv2/opencv.hpp> int main () { cv :: Mat map ( 256 , 768 , CV_8UC1 ); std :: ifstream inputFileStream ( \"seq.txt\" ); int row = 50 , col = 128 ; map . at < uchar > ( row , col ) = 255 ; std :: string line ; inputFileStream >> line ; for ( auto i : line ) { switch ( i ) { case 'U' : row -= 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; case 'D' : row += 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; case 'L' : col -= 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; case 'R' : col += 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; default : ; } cv :: waitKey ( 1 ); cv :: imshow ( \"MAP\" , map ); } cv :: imshow ( \"MAP\" , map ); cv :: waitKey ( 0 ); return 0 ; }","title":"\u732b\u54aa\u9065\u63a7\u5668"},{"location":"ctf_writeup/hackergame2018/cat_remote/#_1","text":"","title":"\u732b\u54aa\u9065\u63a7\u5668"},{"location":"ctf_writeup/hackergame2018/cat_remote/#_2","text":"SOURCE: https://hack2018.lug.ustc.edu.cn/#catremote \u63d0\u793a\uff1aflag \u683c\u5f0f\u4e3a flag{......}\uff0c\u53ea\u5305\u542b\u5b57\u6bcd\uff0c\u5176\u4e2d\u6709\u4e14\u53ea\u6709\u4e24\u4e2a\u4e3a\u5927\u5199\u5b57\u6bcd\u3002 \u4eca\u5929\u7684 App Store \u9996\u9875\u6545\u4e8b\u662f\u300a\u732b\u54aa\u5360\u9886\u4e16\u754c\u300b(\u8be6\u60c5)\u3002 SERIOUSLY? D \u540c\u5b66\u4e0d\u7981\u5f00\u59cb\u5e7b\u60f3\u88ab\u732b\u54aa\u5360\u9886\u7684\u4e16\u754c\uff1a\u96c6\u4e2d\u8425\u91cc\u6210\u7fa4\u7684\u94f2\u5c4e\u5b98\uff0c\u5bc6\u5bc6\u9ebb\u9ebb\u7684 Nepeta cataria\uff08Wikipedia\uff09\u519c\u7530\uff0c\u968f\u610f\u6446\u653e\u7684\u7eb8\u7bb1\u5b50\u5360\u6ee1\u4e86\u9053\u8def\u2026\u2026 \u60f3\u60f3\u5c31\u53ef\u6015\uff0c\u4e0d\u8fc7 D \u540c\u5b66\u77e5\u9053\u4eba\u7c7b\u8fd8\u6709\u7ec8\u6781\u79d8\u5bc6\u6b66\u5668\u53ef\u4ee5\u7528\u2014\u2014\u732b\u54aa\u9065\u63a7\u5668\uff0c\u6709\u4e86\u732b\u54aa\u9065\u63a7\u5668\uff0c\u518d\u591a\u7684\u732b\u54aa\u4e5f\u53ea\u4f1a\u4e56\u4e56\u5730\u542c\u4eba\u7c7b\u7684\u8bdd\uff0c\u54c8\u54c8\u54c8\u54c8\u54c8\uff5e \u4e0b\u9762\u662f\u5236\u4f5c\u732b\u54aa\u9065\u63a7\u5668\u7684\u6280\u672f\u603b\u7ed3\uff0c\u9700\u8981\u7684\u539f\u6599\u6709\uff1a 5mW 6mm \u70b9\u72b6\u6fc0\u5149\u4e8c\u6781\u7ba1\u4e00\u4e2a\uff1b \u9502\u7535\u6c60\u4e00\u4e2a\uff1b \u5bfc\u7ebf\u82e5\u5e72\uff1b \u7136\u540e\u7528\u5bfc\u7ebf\u5c06\u9502\u7535\u6c60\u548c\u6fc0\u5149\u4e8c\u6781\u7ba1\u8fde\u63a5\u8d77\u6765\uff08\u8fd9\u4e00\u6b65\u7684\u76ee\u7684\u662f\u8ba9\u4e8c\u6781\u7ba1\u4eae\u8d77\u6765\uff0c\u4e0d\u60f3\u4e8c\u6781\u7ba1\u4eae\u8d77\u6765\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u8fde\uff09\uff0c\u4e00\u4e2a\u7f8e\u5473\u7684\u732b\u54aa\u9065\u63a7\u5668\u5c31\u505a\u597d\u4e86\u3002 \u732b\u54aa\u9065\u63a7\u5668\u7684\u539f\u7406\u975e\u5e38\u7b80\u5355\uff01\u64b8\u732b\u5b66\u4f1a\u66fe\u7ecf\u6709\u8bba\u6587\u7ed9\u51fa\u8fc7\u7ed3\u8bba\uff1a\u6fc0\u5149\u7b14\u6307\u5411\u54ea\u91cc\uff0c\u732b\u54aa\u5c31\u4f1a\u8dd1\u5230\u54ea\u91cc\u3002 \u4e3a\u4e86\u62a5\u590d\u732b\u54aa\u628a\u81ea\u5df1\u7684\u4ee3\u7801\u6253\u4e71\uff08\u89c1\uff1a\u732b\u54aa\u4e0e\u952e\u76d8\uff09\uff0cD \u540c\u5b66\u628a\u732b\u54aa\u9065\u63a7\u5668\u7ed1\u5728\u53ef\u4ee5\u4e0a\uff08UP\uff09\u4e0b\uff08DOWN\uff09\u5de6\uff08LEFT\uff09\u53f3\uff08RIGHT\uff09\u79fb\u52a8\u7684\u4e09\u8f74\u673a\u68b0\u81c2\u4e0a\uff0c\u5f00\u59cb\u4f7f\u7528\u6811\u8393\u6d3e\uff08\u4e00\u6b3e\u57fa\u4e8e Linux \u7684\u5355\u7247\u673a\u8ba1\u7b97\u673a\uff09\u63a7\u5236\u4e09\u8f74\u673a\u68b0\u81c2\uff0c\u8fdb\u800c\u63a7\u5236\u732b\u54aa\u5728\u8349\u5730\u4e0a\u8dd1\u6765\u8dd1\u53bb\u3002 \u9644\u4ef6\u662f\u6811\u8393\u6d3e\u4e0a\u7559\u4e0b\u7684\u8c03\u8bd5\u8f93\u51fa\u4fe1\u606f\uff0c\u6211\u4eec\u8d76\u5230\u73b0\u573a\u65f6\u53ea\u5269\u4e0b\u8fd9\u4e2a\u4e86\u3002","title":"\u9898\u76ee"},{"location":"ctf_writeup/hackergame2018/cat_remote/#_3","text":"\u6253\u5f00\u6587\u6863\u53d1\u73b0\u4e3a\u56db\u4e2a\u65b9\u5411\u7684\u5b57\u6bcd\uff0c\u731c\u60f3\u753b\u51fa\u8be5\u8def\u7ebf\u5373\u53ef\u83b7\u5f97flag\u3002\u8fd9\u91cc\u4f7f\u7528OpenCV\u8f85\u52a9\u753b\u56fe\uff0c\u4f5c\u56fe\u540e\u5373\u53ef\u53d1\u73b0flag\u3002 #include <iostream> #include <fstream> #include <opencv2/opencv.hpp> int main () { cv :: Mat map ( 256 , 768 , CV_8UC1 ); std :: ifstream inputFileStream ( \"seq.txt\" ); int row = 50 , col = 128 ; map . at < uchar > ( row , col ) = 255 ; std :: string line ; inputFileStream >> line ; for ( auto i : line ) { switch ( i ) { case 'U' : row -= 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; case 'D' : row += 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; case 'L' : col -= 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; case 'R' : col += 1 ; for ( int ir = - 1 ; ir < 1 ; ++ ir ) { for ( int ic = - 1 ; ic < 1 ; ++ ic ) { map . at < uchar > ( row + ir , col + ic ) = 255 ; } } break ; default : ; } cv :: waitKey ( 1 ); cv :: imshow ( \"MAP\" , map ); } cv :: imshow ( \"MAP\" , map ); cv :: waitKey ( 0 ); return 0 ; }","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"szu_oj/cpp/1084/","text":"\u6c42\u77e9\u9635\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c \u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB \u9898\u76ee\u63cf\u8ff0 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7528\u4e00\u7ea7\u6307\u9488\u63a5\u6536\u4e00\u4e2a\u4efb\u610f\u884c\u4efb\u610f\u5217\u7684\u77e9\u9635\u5e76\u8fd4\u56de\u8be5\u77e9\u9635\u5143\u7d20\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c. \u8f93\u5165 \u77e9\u9635\u7684\u884c\u6570 \u77e9\u9635\u7684\u5217\u6570 \u77e9\u9635\u5404\u5143\u7d20\u7684\u503c \u8f93\u51fa \u6700\u5927\u503c \u6700\u5c0f\u503c \u6837\u4f8b\u8f93\u5165 3 3 1 2 3 4 5 6 7 8 9 \u6837\u4f8b\u8f93\u51fa 9 1 \u63d0\u793a \u89e3\u51b3\u65b9\u6848 #include <iostream> void findMinAndMaxValues ( int * ptr , int row , int col ); int main () { int row , col ; std :: cin >> row >> col ; int mat [ row ][ col ]; for ( int ir = 0 ; ir < row ; ++ ir ) { for ( int ic = 0 ; ic < col ; ++ ic ) { std :: cin >> mat [ ir ][ ic ]; } } findMinAndMaxValues ( & mat [ 0 ][ 0 ], row , col ); return 0 ; } void findMinAndMaxValues ( int * ptr , int row , int col ) { int min = * ptr , max = * ptr ; for ( int ir = 0 ; ir < row ; ++ ir ) { for ( int ic = 0 ; ic < col ; ++ ic ) { if ( ptr [ ir * col + ic ] < min ) { min = ptr [ ir * col + ic ]; } if ( ptr [ ir * col + ic ] > max ) { max = ptr [ ir * col + ic ]; } } } std :: cout << max << std :: endl << min << std :: endl ; }","title":"\u6c42\u77e9\u9635\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c"},{"location":"szu_oj/cpp/1084/#_1","text":"\u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB","title":"\u6c42\u77e9\u9635\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c"},{"location":"szu_oj/cpp/1084/#_2","text":"\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7528\u4e00\u7ea7\u6307\u9488\u63a5\u6536\u4e00\u4e2a\u4efb\u610f\u884c\u4efb\u610f\u5217\u7684\u77e9\u9635\u5e76\u8fd4\u56de\u8be5\u77e9\u9635\u5143\u7d20\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c.","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"szu_oj/cpp/1084/#_3","text":"\u77e9\u9635\u7684\u884c\u6570 \u77e9\u9635\u7684\u5217\u6570 \u77e9\u9635\u5404\u5143\u7d20\u7684\u503c","title":"\u8f93\u5165"},{"location":"szu_oj/cpp/1084/#_4","text":"\u6700\u5927\u503c \u6700\u5c0f\u503c","title":"\u8f93\u51fa"},{"location":"szu_oj/cpp/1084/#_5","text":"3 3 1 2 3 4 5 6 7 8 9","title":"\u6837\u4f8b\u8f93\u5165"},{"location":"szu_oj/cpp/1084/#_6","text":"9 1","title":"\u6837\u4f8b\u8f93\u51fa"},{"location":"szu_oj/cpp/1084/#_7","text":"","title":"\u63d0\u793a"},{"location":"szu_oj/cpp/1084/#_8","text":"#include <iostream> void findMinAndMaxValues ( int * ptr , int row , int col ); int main () { int row , col ; std :: cin >> row >> col ; int mat [ row ][ col ]; for ( int ir = 0 ; ir < row ; ++ ir ) { for ( int ic = 0 ; ic < col ; ++ ic ) { std :: cin >> mat [ ir ][ ic ]; } } findMinAndMaxValues ( & mat [ 0 ][ 0 ], row , col ); return 0 ; } void findMinAndMaxValues ( int * ptr , int row , int col ) { int min = * ptr , max = * ptr ; for ( int ir = 0 ; ir < row ; ++ ir ) { for ( int ic = 0 ; ic < col ; ++ ic ) { if ( ptr [ ir * col + ic ] < min ) { min = ptr [ ir * col + ic ]; } if ( ptr [ ir * col + ic ] > max ) { max = ptr [ ir * col + ic ]; } } } std :: cout << max << std :: endl << min << std :: endl ; }","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"szu_oj/cpp/1295/","text":"\u5355\u8bcd\u7edf\u8ba1 \u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB \u9898\u76ee\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u5355\u8bcd\u7684\u51fa\u73b0\u9891\u7387\u964d\u5e8f\u6253\u5370\u51fa\u6240\u8f93\u5165\u7684\u7684\u5404\u4e2a\u5355\u8bcd\u3002\u6bcf\u4e2a\u5355\u8bcd\u524d\u6807\u6709\u5b83\u7684\u8ba1\u6570\u503c\u3002 \u8f93\u5165 \u5404\u4e2a\u5355\u8bcd\uff0c\u8f93\u51650\u5219\u8868\u793a\u5355\u8bcd\u7ed3\u675f \u8f93\u51fa \u964d\u5e8f\u6253\u5370\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u548c\u5355\u8bcd\u3002\u5355\u8bcd\u9891\u5ea6\u76f8\u540c\uff0c\u6309\u51fa\u73b0\u987a\u5e8f\u8f93\u51fa\u3002 \u6837\u4f8b\u8f93\u5165 bad good bad cute how good good 0 \u6837\u4f8b\u8f93\u51fa 3 good 2 bad 1 cute 1 how \u63d0\u793a \u89e3\u51b3\u65b9\u6848 #include <iostream> #include <string> #include <vector> #include <algorithm> struct Pair { std :: string string ; int count ; Pair ( std :: string & string , int count ) : string ( string ), count ( count ) {} }; bool operator == ( Pair & pair , const std :: string & string ) { return pair . string == string ; } bool operator < ( const Pair & lhs , const Pair & rhs ) { return lhs . count > rhs . count ; // NG } int main () { std :: vector < Pair > vector ; std :: string string ; std :: cin >> string ; while ( string != \"0\" ) { std :: vector < Pair >:: iterator it = std :: find ( vector . begin (), vector . end (), string ); if ( it != vector . end ()) { it -> count += 1 ; } else { vector . push_back ( Pair ( string , 1 )); } std :: cin >> string ; } std :: sort ( vector . begin (), vector . end ()); for ( int i = 0 ; i < vector . size (); ++ i ) { std :: cout << vector [ i ]. count << ' ' << vector [ i ]. string << std :: endl ; } return 0 ; }","title":"\u5355\u8bcd\u7edf\u8ba1"},{"location":"szu_oj/cpp/1295/#_1","text":"\u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB","title":"\u5355\u8bcd\u7edf\u8ba1"},{"location":"szu_oj/cpp/1295/#_2","text":"\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u5355\u8bcd\u7684\u51fa\u73b0\u9891\u7387\u964d\u5e8f\u6253\u5370\u51fa\u6240\u8f93\u5165\u7684\u7684\u5404\u4e2a\u5355\u8bcd\u3002\u6bcf\u4e2a\u5355\u8bcd\u524d\u6807\u6709\u5b83\u7684\u8ba1\u6570\u503c\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"szu_oj/cpp/1295/#_3","text":"\u5404\u4e2a\u5355\u8bcd\uff0c\u8f93\u51650\u5219\u8868\u793a\u5355\u8bcd\u7ed3\u675f","title":"\u8f93\u5165"},{"location":"szu_oj/cpp/1295/#_4","text":"\u964d\u5e8f\u6253\u5370\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u548c\u5355\u8bcd\u3002\u5355\u8bcd\u9891\u5ea6\u76f8\u540c\uff0c\u6309\u51fa\u73b0\u987a\u5e8f\u8f93\u51fa\u3002","title":"\u8f93\u51fa"},{"location":"szu_oj/cpp/1295/#_5","text":"bad good bad cute how good good 0","title":"\u6837\u4f8b\u8f93\u5165"},{"location":"szu_oj/cpp/1295/#_6","text":"3 good 2 bad 1 cute 1 how","title":"\u6837\u4f8b\u8f93\u51fa"},{"location":"szu_oj/cpp/1295/#_7","text":"","title":"\u63d0\u793a"},{"location":"szu_oj/cpp/1295/#_8","text":"#include <iostream> #include <string> #include <vector> #include <algorithm> struct Pair { std :: string string ; int count ; Pair ( std :: string & string , int count ) : string ( string ), count ( count ) {} }; bool operator == ( Pair & pair , const std :: string & string ) { return pair . string == string ; } bool operator < ( const Pair & lhs , const Pair & rhs ) { return lhs . count > rhs . count ; // NG } int main () { std :: vector < Pair > vector ; std :: string string ; std :: cin >> string ; while ( string != \"0\" ) { std :: vector < Pair >:: iterator it = std :: find ( vector . begin (), vector . end (), string ); if ( it != vector . end ()) { it -> count += 1 ; } else { vector . push_back ( Pair ( string , 1 )); } std :: cin >> string ; } std :: sort ( vector . begin (), vector . end ()); for ( int i = 0 ; i < vector . size (); ++ i ) { std :: cout << vector [ i ]. count << ' ' << vector [ i ]. string << std :: endl ; } return 0 ; }","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"szu_oj/cpp/1341/","text":"\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB \u9898\u76ee\u63cf\u8ff0 \u8ba1\u7b97\u5b57\u7b26\u4e32S\u7684\u957f\u5ea6\uff0c\u529f\u80fd\u4e0estrlen\u51fd\u6570\u76f8\u540c\uff0c\u4f46\u4e0d\u80fd\u8c03\u7528\u5e93\u51fd\u6570strlen\uff0c\u5426\u5219\u4e0d\u7ed9\u5206\u3002\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e0d\u5305\u542b\u7a7a\u683c\u3002 \u8f93\u5165 \u8f93\u5165\u6d4b\u8bd5\u7ec4\u6570t \u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\uff0c\u8f93\u5165\u5b57\u7b26\u4e32S\uff08\u957f\u5ea6<=30\uff09 \u8f93\u51fa \u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\uff0c\u8f93\u51faS\u7684\u957f\u5ea6 \u6837\u4f8b\u8f93\u5165 1 hehe \u6837\u4f8b\u8f93\u51fa 4 \u63d0\u793a \u89e3\u51b3\u65b9\u6848 #include <iostream> int main () { int ctrl ; std :: cin >> ctrl ; while ( ctrl -- ) { char str [ 64 ] = {}; std :: cin >> str ; int length = 0 ; while ( str [ ++ length ] != '\\0' ); std :: cout << length << std :: endl ; } return 0 ; }","title":"\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6"},{"location":"szu_oj/cpp/1341/#_1","text":"\u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB","title":"\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6"},{"location":"szu_oj/cpp/1341/#_2","text":"\u8ba1\u7b97\u5b57\u7b26\u4e32S\u7684\u957f\u5ea6\uff0c\u529f\u80fd\u4e0estrlen\u51fd\u6570\u76f8\u540c\uff0c\u4f46\u4e0d\u80fd\u8c03\u7528\u5e93\u51fd\u6570strlen\uff0c\u5426\u5219\u4e0d\u7ed9\u5206\u3002\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e0d\u5305\u542b\u7a7a\u683c\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"szu_oj/cpp/1341/#_3","text":"\u8f93\u5165\u6d4b\u8bd5\u7ec4\u6570t \u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\uff0c\u8f93\u5165\u5b57\u7b26\u4e32S\uff08\u957f\u5ea6<=30\uff09","title":"\u8f93\u5165"},{"location":"szu_oj/cpp/1341/#_4","text":"\u5bf9\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\uff0c\u8f93\u51faS\u7684\u957f\u5ea6","title":"\u8f93\u51fa"},{"location":"szu_oj/cpp/1341/#_5","text":"1 hehe","title":"\u6837\u4f8b\u8f93\u5165"},{"location":"szu_oj/cpp/1341/#_6","text":"4","title":"\u6837\u4f8b\u8f93\u51fa"},{"location":"szu_oj/cpp/1341/#_7","text":"","title":"\u63d0\u793a"},{"location":"szu_oj/cpp/1341/#_8","text":"#include <iostream> int main () { int ctrl ; std :: cin >> ctrl ; while ( ctrl -- ) { char str [ 64 ] = {}; std :: cin >> str ; int length = 0 ; while ( str [ ++ length ] != '\\0' ); std :: cout << length << std :: endl ; } return 0 ; }","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"szu_oj/ds/1245/","text":"DS\u94fe\u8868\u2014\u5b66\u751f\u5bbf\u820d\u7ba1\u7406 \u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB \u9898\u76ee\u63cf\u8ff0 \u5047\u8bbe\u67d0\u6821\u670920\u95f4\u5bbf\u820d\uff0c\u5bbf\u820d\u7f16\u53f7101\uff0c102\uff0c...,120\u3002\u6bcf\u95f4\u53ea\u4f4f\u4e00\u540d\u5b66\u751f\u3002\u521d\u59cb\u90e8\u5206\u5bbf\u820d\u5df2\u7528\u3002\u7528\u4e24\u4e2a\u94fe\u8868\uff08\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u548c\u53ef\u7528\u5bbf\u820d\u94fe\u8868\uff09\u7ef4\u62a4\u5bbf\u820d\u7684\u7ba1\u7406\uff0c\u5b9e\u73b0\u5bbf\u820d\u5206\u914d\u3001\u5bbf\u820d\u4ea4\u56de\u3002 \u7ea6\u5b9a\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u6309\u5bbf\u820d\u53f7\u5347\u5e8f\u94fe\u63a5\u3002\u521d\u59cb\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4e5f\u6309\u5bbf\u820d\u53f7\u5347\u5e8f\u94fe\u63a5\u3002 \u5bbf\u820d\u5206\u914d\u4ece\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u6458\u53d6\u7b2c\u4e00\u95f4\u5bbf\u820d\u5206\u914d\u7ed9\u5b66\u751f\u3002\u5b66\u751f\u4ea4\u56de\u7684\u5bbf\u820d\u6302\u5728\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u6700\u540e\u3002 \u5907\u6ce8\uff1a\u4f7f\u7528list\u5bb9\u5668\u6216\u9759\u6001\u94fe\u8868\u3002\u4e0d\u7528\u8003\u8651\u5bbf\u820d\u5206\u914d\u548c\u4ea4\u56de\u4e0d\u6210\u529f\u7684\u60c5\u51b5\u3002 \u8f93\u5165 \u521d\u59cb\u5bbf\u820d\u72b6\u6001\uff0c\u7b2c\u4e00\u884c\u8f93\u5165n\uff0c\u8868\u793a\u5df2\u7528\u5bbf\u820dn\u95f4 \u540e\u8ddfn\u884c\u6570\u636e\uff0c\u6bcf\u884c\u683c\u5f0f\u4e3a\uff1a\u5bbf\u820d\u53f7 \u5b66\u751f\u59d3\u540d \u64cd\u4f5c\u6b21\u6570m\uff0c\u540e\u8ddfm\u884c\u64cd\u4f5c\uff0c\u64cd\u4f5c\u683c\u5f0f\u5982\u4e0b\uff1a assign \u5b66\u751f //\u4e3a\u5b66\u751f\u5206\u914d\u5bbf\u820d\uff0c\u4ece\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u5934\u6458\u53d6\u4e00\u95f4\u5bbf\u820d\uff0c //\u6309\u5bbf\u820d\u53f7\u5347\u5e8f\u6302\u5728\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u3002 return \u5bbf\u820d\u53f7 //\u5b66\u751f\u9000\u5bbf\u820d\uff0c\u5220\u9664\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u5bf9\u5e94\u7ed3\u70b9\uff0c //\u6302\u5728\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u5c3e\u90e8\u3002 display_free //\u8f93\u51fa\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4fe1\u606f\u3002 display_used //\u8f93\u51fa\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4fe1\u606f\u3002 \u8f93\u51fa display_free\u4f9d\u6b21\u8f93\u51fa\u5f53\u524d\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u7684\u5bbf\u820d\u53f7\uff0c\u5177\u4f53\u683c\u5f0f\u89c1\u6837\u4f8b\u3002 display_used\u4f9d\u6b21\u8f93\u51fa\u5f53\u524d\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u7684\u5b66\u751f\u548c\u5bbf\u820d\u53f7\uff0c\u5177\u4f53\u683c\u5f0f\u89c1\u6837\u4f8b\u3002 \u6837\u4f8b\u8f93\u5165 5 \u674e\u660e 103 \u5f20\u4e09 106 \u738b\u4e94 107 \u94b1\u4f1f 112 \u7ae0\u7acb 118 8 assign \u674e\u56db assign \u8d75\u516d return 118 return 101 assign \u9a6c\u5c71 display_used assign \u6797\u7acb display_free \u6837\u4f8b\u8f93\u51fa \u8d75\u516d(102)-\u674e\u660e(103)-\u9a6c\u5c71(104)-\u5f20\u4e09(106)-\u738b\u4e94(107)-\u94b1\u4f1f(112) 108-109-110-111-113-114-115-116-117-119-120-118-101 \u63d0\u793a \u89e3\u51b3\u65b9\u6848 #include <iostream> #include <list> #include <string> #include <algorithm> class Student { public : std :: string name ; int room ; Student ( std :: string & name , int room ) : name ( name ), room ( room ) {} }; class DormMgr { public : DormMgr () { for ( int i = 101 ; i <= 120 ; ++ i ) { freeDorm . push_back ( i ); } } void initialize () { std :: string name ; int room ; std :: cin >> name >> room ; freeDorm . remove ( room ); usedDorm . push_back ( Student ( name , room )); } void operate () { std :: string operation ; std :: cin >> operation ; if ( operation == \"assign\" ) { std :: string name ; std :: cin >> name ; int room = freeDorm . front (); freeDorm . pop_front (); usedDorm . push_back ( Student ( name , room )); usedDorm . sort (); } else if ( operation == \"return\" ) { int room ; std :: cin >> room ; for ( std :: list < Student >:: iterator it = usedDorm . begin (); it != usedDorm . end (); ++ it ) { if ( room == it -> room ) { usedDorm . erase ( it ); freeDorm . push_back ( room ); break ; } } } else if ( operation == \"display_free\" ) { std :: cout << freeDorm . front (); for ( std :: list < int >:: iterator it = ++ freeDorm . begin (); it != freeDorm . end (); ++ it ) { std :: cout << '-' << * it ; } std :: cout << std :: endl ; } else if ( operation == \"display_used\" ) { std :: cout << usedDorm . front (). name << '(' << usedDorm . front (). room << ')' ; for ( std :: list < Student >:: iterator it = ++ usedDorm . begin (); it != usedDorm . end (); ++ it ) { std :: cout << '-' << it -> name << '(' << it -> room << ')' ; } std :: cout << std :: endl ; } } private : std :: list < int > freeDorm ; std :: list < Student > usedDorm ; }; bool operator < ( const Student & lhs , const Student & rhs ) { return lhs . room < rhs . room ; } int main () { class DormMgr dormMgr ; int ctrl ; std :: cin >> ctrl ; while ( ctrl -- ) { dormMgr . initialize (); } std :: cin >> ctrl ; while ( ctrl -- ) { dormMgr . operate (); } return 0 ; }","title":"DS\u94fe\u8868\u2014\u5b66\u751f\u5bbf\u820d\u7ba1\u7406"},{"location":"szu_oj/ds/1245/#ds","text":"\u65f6\u95f4\u9650\u5236: 1 Sec \u5185\u5b58\u9650\u5236: 128 MB","title":"DS\u94fe\u8868\u2014\u5b66\u751f\u5bbf\u820d\u7ba1\u7406"},{"location":"szu_oj/ds/1245/#_1","text":"\u5047\u8bbe\u67d0\u6821\u670920\u95f4\u5bbf\u820d\uff0c\u5bbf\u820d\u7f16\u53f7101\uff0c102\uff0c...,120\u3002\u6bcf\u95f4\u53ea\u4f4f\u4e00\u540d\u5b66\u751f\u3002\u521d\u59cb\u90e8\u5206\u5bbf\u820d\u5df2\u7528\u3002\u7528\u4e24\u4e2a\u94fe\u8868\uff08\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u548c\u53ef\u7528\u5bbf\u820d\u94fe\u8868\uff09\u7ef4\u62a4\u5bbf\u820d\u7684\u7ba1\u7406\uff0c\u5b9e\u73b0\u5bbf\u820d\u5206\u914d\u3001\u5bbf\u820d\u4ea4\u56de\u3002 \u7ea6\u5b9a\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u6309\u5bbf\u820d\u53f7\u5347\u5e8f\u94fe\u63a5\u3002\u521d\u59cb\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4e5f\u6309\u5bbf\u820d\u53f7\u5347\u5e8f\u94fe\u63a5\u3002 \u5bbf\u820d\u5206\u914d\u4ece\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u6458\u53d6\u7b2c\u4e00\u95f4\u5bbf\u820d\u5206\u914d\u7ed9\u5b66\u751f\u3002\u5b66\u751f\u4ea4\u56de\u7684\u5bbf\u820d\u6302\u5728\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u6700\u540e\u3002 \u5907\u6ce8\uff1a\u4f7f\u7528list\u5bb9\u5668\u6216\u9759\u6001\u94fe\u8868\u3002\u4e0d\u7528\u8003\u8651\u5bbf\u820d\u5206\u914d\u548c\u4ea4\u56de\u4e0d\u6210\u529f\u7684\u60c5\u51b5\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"szu_oj/ds/1245/#_2","text":"\u521d\u59cb\u5bbf\u820d\u72b6\u6001\uff0c\u7b2c\u4e00\u884c\u8f93\u5165n\uff0c\u8868\u793a\u5df2\u7528\u5bbf\u820dn\u95f4 \u540e\u8ddfn\u884c\u6570\u636e\uff0c\u6bcf\u884c\u683c\u5f0f\u4e3a\uff1a\u5bbf\u820d\u53f7 \u5b66\u751f\u59d3\u540d \u64cd\u4f5c\u6b21\u6570m\uff0c\u540e\u8ddfm\u884c\u64cd\u4f5c\uff0c\u64cd\u4f5c\u683c\u5f0f\u5982\u4e0b\uff1a assign \u5b66\u751f //\u4e3a\u5b66\u751f\u5206\u914d\u5bbf\u820d\uff0c\u4ece\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u5934\u6458\u53d6\u4e00\u95f4\u5bbf\u820d\uff0c //\u6309\u5bbf\u820d\u53f7\u5347\u5e8f\u6302\u5728\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u3002 return \u5bbf\u820d\u53f7 //\u5b66\u751f\u9000\u5bbf\u820d\uff0c\u5220\u9664\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u5bf9\u5e94\u7ed3\u70b9\uff0c //\u6302\u5728\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u5c3e\u90e8\u3002 display_free //\u8f93\u51fa\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4fe1\u606f\u3002 display_used //\u8f93\u51fa\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4fe1\u606f\u3002","title":"\u8f93\u5165"},{"location":"szu_oj/ds/1245/#_3","text":"display_free\u4f9d\u6b21\u8f93\u51fa\u5f53\u524d\u53ef\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u7684\u5bbf\u820d\u53f7\uff0c\u5177\u4f53\u683c\u5f0f\u89c1\u6837\u4f8b\u3002 display_used\u4f9d\u6b21\u8f93\u51fa\u5f53\u524d\u5df2\u7528\u5bbf\u820d\u94fe\u8868\u4e2d\u7684\u5b66\u751f\u548c\u5bbf\u820d\u53f7\uff0c\u5177\u4f53\u683c\u5f0f\u89c1\u6837\u4f8b\u3002","title":"\u8f93\u51fa"},{"location":"szu_oj/ds/1245/#_4","text":"5 \u674e\u660e 103 \u5f20\u4e09 106 \u738b\u4e94 107 \u94b1\u4f1f 112 \u7ae0\u7acb 118 8 assign \u674e\u56db assign \u8d75\u516d return 118 return 101 assign \u9a6c\u5c71 display_used assign \u6797\u7acb display_free","title":"\u6837\u4f8b\u8f93\u5165"},{"location":"szu_oj/ds/1245/#_5","text":"\u8d75\u516d(102)-\u674e\u660e(103)-\u9a6c\u5c71(104)-\u5f20\u4e09(106)-\u738b\u4e94(107)-\u94b1\u4f1f(112) 108-109-110-111-113-114-115-116-117-119-120-118-101","title":"\u6837\u4f8b\u8f93\u51fa"},{"location":"szu_oj/ds/1245/#_6","text":"","title":"\u63d0\u793a"},{"location":"szu_oj/ds/1245/#_7","text":"#include <iostream> #include <list> #include <string> #include <algorithm> class Student { public : std :: string name ; int room ; Student ( std :: string & name , int room ) : name ( name ), room ( room ) {} }; class DormMgr { public : DormMgr () { for ( int i = 101 ; i <= 120 ; ++ i ) { freeDorm . push_back ( i ); } } void initialize () { std :: string name ; int room ; std :: cin >> name >> room ; freeDorm . remove ( room ); usedDorm . push_back ( Student ( name , room )); } void operate () { std :: string operation ; std :: cin >> operation ; if ( operation == \"assign\" ) { std :: string name ; std :: cin >> name ; int room = freeDorm . front (); freeDorm . pop_front (); usedDorm . push_back ( Student ( name , room )); usedDorm . sort (); } else if ( operation == \"return\" ) { int room ; std :: cin >> room ; for ( std :: list < Student >:: iterator it = usedDorm . begin (); it != usedDorm . end (); ++ it ) { if ( room == it -> room ) { usedDorm . erase ( it ); freeDorm . push_back ( room ); break ; } } } else if ( operation == \"display_free\" ) { std :: cout << freeDorm . front (); for ( std :: list < int >:: iterator it = ++ freeDorm . begin (); it != freeDorm . end (); ++ it ) { std :: cout << '-' << * it ; } std :: cout << std :: endl ; } else if ( operation == \"display_used\" ) { std :: cout << usedDorm . front (). name << '(' << usedDorm . front (). room << ')' ; for ( std :: list < Student >:: iterator it = ++ usedDorm . begin (); it != usedDorm . end (); ++ it ) { std :: cout << '-' << it -> name << '(' << it -> room << ')' ; } std :: cout << std :: endl ; } } private : std :: list < int > freeDorm ; std :: list < Student > usedDorm ; }; bool operator < ( const Student & lhs , const Student & rhs ) { return lhs . room < rhs . room ; } int main () { class DormMgr dormMgr ; int ctrl ; std :: cin >> ctrl ; while ( ctrl -- ) { dormMgr . initialize (); } std :: cin >> ctrl ; while ( ctrl -- ) { dormMgr . operate (); } return 0 ; }","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/10/","text":"10.1 \u7ebf\u7a0b\u6982\u8ff0 \u5728java\u7a0b\u5e8f\u4e2d\uff0c\u4e0b\u5217\u5173\u4e8e\u7ebf\u7a0b\u7684\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09\u3002 A. run\u65b9\u6cd5\u662f\u8fd0\u884c\u7ebf\u7a0b\u7684\u4e3b\u4f53 B. \u591a\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u65f6\u6267\u884c\u987a\u5e8f\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684 C. \u5982\u679crun\u65b9\u6cd5\u6267\u884c\u7ed3\u675f\u4e86\uff0c\u8bf4\u660e\u7ebf\u7a0b\u6b7b\u4ea1\u4e86 D. \u5728Java\u4e2d\uff0c\u9ad8\u4f18\u5148\u7ea7\u7684\u53ef\u8fd0\u884c\u7ebf\u7a0b\u4f1a\u62a2\u5360\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b \u89e3\u51b3\u65b9\u6848 B 10.2 \u521b\u5efa\u7ebf\u7a0b Thread\u7c7b\u7528\u6765\u521b\u5efa\u548c\u63a7\u5236\u7ebf\u7a0b\uff0c\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u5e94\u8be5\u4f7f\u7528\u4e0b\u9762\u7684\u54ea\u4e2a\u65b9\u6cd5\uff1f\uff08 \uff09 A. init() B. start() C. run() D. notifyAll() \u89e3\u51b3\u65b9\u6848 B 10.3 \u7ebf\u7a0b\u540c\u6b65\u673a\u5236 \u5f53\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\u64cd\u4f5c\u540c\u4e00\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\uff08 \uff09\u5173\u952e\u5b57\u8fdb\u884c\u8d44\u6e90\u540c\u6b65\u3002 A. transient B. synchronized C. public D. static \u89e3\u51b3\u65b9\u6848 B \u6d4b\u9a8c \u7ed9Java\u7ebf\u7a0b\u8bbe\u5b9a\u4f18\u5148\u7ea7\u7684\u6210\u5458\u65b9\u6cd5\u662f\uff08 \uff09\u3002 A. getPriority() B. setPriority() C. getThread() D. setThread() \u89e3\u51b3\u65b9\u6848 B","title":"10 \u7ebf\u7a0b"},{"location":"uooc/java/10/#101","text":"","title":"10.1 \u7ebf\u7a0b\u6982\u8ff0"},{"location":"uooc/java/10/#java","text":"A. run\u65b9\u6cd5\u662f\u8fd0\u884c\u7ebf\u7a0b\u7684\u4e3b\u4f53 B. \u591a\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u65f6\u6267\u884c\u987a\u5e8f\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684 C. \u5982\u679crun\u65b9\u6cd5\u6267\u884c\u7ed3\u675f\u4e86\uff0c\u8bf4\u660e\u7ebf\u7a0b\u6b7b\u4ea1\u4e86 D. \u5728Java\u4e2d\uff0c\u9ad8\u4f18\u5148\u7ea7\u7684\u53ef\u8fd0\u884c\u7ebf\u7a0b\u4f1a\u62a2\u5360\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b","title":"\u5728java\u7a0b\u5e8f\u4e2d\uff0c\u4e0b\u5217\u5173\u4e8e\u7ebf\u7a0b\u7684\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09\u3002"},{"location":"uooc/java/10/#_1","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/10/#102","text":"","title":"10.2 \u521b\u5efa\u7ebf\u7a0b"},{"location":"uooc/java/10/#thread","text":"A. init() B. start() C. run() D. notifyAll()","title":"Thread\u7c7b\u7528\u6765\u521b\u5efa\u548c\u63a7\u5236\u7ebf\u7a0b\uff0c\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u5e94\u8be5\u4f7f\u7528\u4e0b\u9762\u7684\u54ea\u4e2a\u65b9\u6cd5\uff1f\uff08 \uff09"},{"location":"uooc/java/10/#_2","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/10/#103","text":"","title":"10.3 \u7ebf\u7a0b\u540c\u6b65\u673a\u5236"},{"location":"uooc/java/10/#_3","text":"A. transient B. synchronized C. public D. static","title":"\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\u64cd\u4f5c\u540c\u4e00\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\uff08 \uff09\u5173\u952e\u5b57\u8fdb\u884c\u8d44\u6e90\u540c\u6b65\u3002"},{"location":"uooc/java/10/#_4","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/10/#_5","text":"","title":"\u6d4b\u9a8c"},{"location":"uooc/java/10/#java_1","text":"A. getPriority() B. setPriority() C. getThread() D. setThread()","title":"\u7ed9Java\u7ebf\u7a0b\u8bbe\u5b9a\u4f18\u5148\u7ea7\u7684\u6210\u5458\u65b9\u6cd5\u662f\uff08 \uff09\u3002"},{"location":"uooc/java/10/#_6","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/11/","text":"11.1 \u7f51\u7edc\u5730\u5740 InetAddress\u7c7b\u4e2d\u7684\uff08 \uff09\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u6b63\u5411\u540d\u79f0\u89e3\u6790\u3002 A. isReachable B. getHostAddress() C. getHostName() D. getByName() \u89e3\u51b3\u65b9\u6848 D 11.2 UDP\u6570\u636e\u62a5 \u4f7f\u7528UDP\u5957\u63a5\u5b57\u901a\u4fe1\u65f6\uff0c\u5e38\u7528\uff08 \uff09\u7c7b\u628a\u8981\u53d1\u9001\u7684\u4fe1\u606f\u6253\u5305\u3002 A. String B. DatagramSocket C. MulticastSocket D. DatagramPacket \u89e3\u51b3\u65b9\u6848 D 11.3 TCP\u8fde\u63a5 ServerSocket\u7684\u76d1\u542c\u65b9\u6cd5accept()\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662f\uff08 \uff09\u3002 A. void B. Object C. Socket D. DatagramPacket \u89e3\u51b3\u65b9\u6848 C","title":"11 Java\u7f51\u7edc\u7f16\u7a0b"},{"location":"uooc/java/11/#111","text":"","title":"11.1 \u7f51\u7edc\u5730\u5740"},{"location":"uooc/java/11/#inetaddress","text":"A. isReachable B. getHostAddress() C. getHostName() D. getByName()","title":"InetAddress\u7c7b\u4e2d\u7684\uff08 \uff09\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u6b63\u5411\u540d\u79f0\u89e3\u6790\u3002"},{"location":"uooc/java/11/#_1","text":"D","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/11/#112-udp","text":"","title":"11.2 UDP\u6570\u636e\u62a5"},{"location":"uooc/java/11/#udp","text":"A. String B. DatagramSocket C. MulticastSocket D. DatagramPacket","title":"\u4f7f\u7528UDP\u5957\u63a5\u5b57\u901a\u4fe1\u65f6\uff0c\u5e38\u7528\uff08 \uff09\u7c7b\u628a\u8981\u53d1\u9001\u7684\u4fe1\u606f\u6253\u5305\u3002"},{"location":"uooc/java/11/#_2","text":"D","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/11/#113-tcp","text":"","title":"11.3 TCP\u8fde\u63a5"},{"location":"uooc/java/11/#serversocketaccept","text":"A. void B. Object C. Socket D. DatagramPacket","title":"ServerSocket\u7684\u76d1\u542c\u65b9\u6cd5accept()\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662f\uff08 \uff09\u3002"},{"location":"uooc/java/11/#_3","text":"C","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/6/","text":"6.1\u6cdb\u578b \u5df2\u77e5\u6709\u6cdb\u578b\u7c7bBox \uff0c\u4e0b\u9762\u54ea\u4e9b\u8bed\u53e5\u662f\u6b63\u786e\u7684\uff1a A. Box box; B. Box box = null; C. Box box; D. Box box = null; \u89e3\u51b3\u65b9\u6848 CD \u6cdb\u578b\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a class Box < T >{ ... } \u5c16\u62ec\u53f7\u5185\u7684\u7c7b\u578b\u53c2\u6570\u4e2a\u6570\u53ea\u80fd\u662f\u4e00\u4e2a\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B 6.2 Collection\u96c6\u5408\u7c7b \u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff1a HashSet myset = new HashSet (); myset . add ( new String ( \"Java\" )); //\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 myset . add ( \"Java\" ); //\u518d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 System . out . println ( myset . size ()); A. 0 B. 1 C. 2 D. \u9519\u8bef\uff0c\u65e0\u6cd5\u8fd0\u884c \u89e3\u51b3\u65b9\u6848 B \u91cd\u590d\u5143\u7d20 \u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a ArrayList < String > mylist = new ArrayList < String >(); mylist . add ( \"Java\" ); mylist . add ( \"\u662f\u597d\u8bed\u8a00\" ); mylist . add ( \"\uff01\" ); System . out . println ( mylist . size ()); A. 0 B. 1 C. 2 D. 3 \u89e3\u51b3\u65b9\u6848 D","title":"6 \u6cdb\u578b\u4e0e\u96c6\u5408"},{"location":"uooc/java/6/#61","text":"","title":"6.1\u6cdb\u578b"},{"location":"uooc/java/6/#box","text":"A. Box box; B. Box box = null; C. Box box; D. Box box = null;","title":"\u5df2\u77e5\u6709\u6cdb\u578b\u7c7bBox\uff0c\u4e0b\u9762\u54ea\u4e9b\u8bed\u53e5\u662f\u6b63\u786e\u7684\uff1a"},{"location":"uooc/java/6/#_1","text":"CD","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/6/#_2","text":"class Box < T >{ ... }","title":"\u6cdb\u578b\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a"},{"location":"uooc/java/6/#_3","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u5c16\u62ec\u53f7\u5185\u7684\u7c7b\u578b\u53c2\u6570\u4e2a\u6570\u53ea\u80fd\u662f\u4e00\u4e2a\u3002"},{"location":"uooc/java/6/#_4","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/6/#62-collection","text":"","title":"6.2 Collection\u96c6\u5408\u7c7b"},{"location":"uooc/java/6/#_5","text":"HashSet myset = new HashSet (); myset . add ( new String ( \"Java\" )); //\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 myset . add ( \"Java\" ); //\u518d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 System . out . println ( myset . size ()); A. 0 B. 1 C. 2 D. \u9519\u8bef\uff0c\u65e0\u6cd5\u8fd0\u884c","title":"\u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff1a"},{"location":"uooc/java/6/#_6","text":"B \u91cd\u590d\u5143\u7d20","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/6/#_7","text":"ArrayList < String > mylist = new ArrayList < String >(); mylist . add ( \"Java\" ); mylist . add ( \"\u662f\u597d\u8bed\u8a00\" ); mylist . add ( \"\uff01\" ); System . out . println ( mylist . size ()); A. 0 B. 1 C. 2 D. 3","title":"\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a"},{"location":"uooc/java/6/#_8","text":"D","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/","text":"7.1 \u5904\u7406\u5f02\u5e38 \u5f53\u65b9\u6cd5\u9047\u5230\u5f02\u5e38\u53c8\u4e0d\u77e5\u5982\u4f55\u5904\u7406\u65f6\uff0c\u4e0b\u5217\u54ea\u79cd\u8bf4\u6cd5\u662f\u6b63\u786e\u7684\uff1f A. \u6355\u83b7\u5f02\u5e38 B. \u629b\u51fa\u5f02\u5e38 C. \u58f0\u660e\u5f02\u5e38 D. \u5d4c\u5957\u5f02\u5e38 \u89e3\u51b3\u65b9\u6848 B \u8bf7\u95ee\u6240\u6709\u7684\u5f02\u5e38\u7c7b\u7686\u7ee7\u627f\u54ea\u4e00\u4e2a\u7c7b\uff1f A. java.io.Exception B. java.lang.Throwable C. java.lang.Exception D. java.lang.Error \u89e3\u51b3\u65b9\u6848 B \u5f02\u5e38\u662f\u7a0b\u5e8f\u9519\u8bef\u6216\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u9519\u8bef\u7684\u4e0d\u6b63\u5e38\u72b6\u6001\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 A \u5f53\u4e00\u4e2a\u65b9\u6cd5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\uff0c\u5219\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u7ec8\u6b62\uff0c\u4f46\u662f\u6574\u4e2a\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u7ec8\u6b62\u8fd0\u884c\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 A 7.2 \u4f8b\u5916\u5904\u7406\u673a\u5236 \u7f16\u8bd1java\u7a0b\u5e8f\u65f6\u51fa\u73b0error: cannot read: aaa.java\uff0c\u5219\u4e0b\u5217\u539f\u56e0\u6700\u6b63\u786e\u7684\u662f\uff1f A. \u539f\u56e0\u662f\u6267\u884c\u7684\u5f53\u524d\u76ee\u5f55\u4e0b\u6ca1\u6709\u627e\u5230aaa.java\u6587\u4ef6 B. \u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5JDK\u5f00\u53d1\u73af\u5883\u3002 C. \u539f\u56e0\u662fjava\u6e90\u6587\u4ef6\u540d\u540e\u7f00\u4e00\u5b9a\u662f\u4ee5 .txt \u7ed3\u5c3e\u3002 D. \u539f\u56e0\u662fJDK\u5b89\u88c5\u540e\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfPATH\u548cClasspath \u3002 \u89e3\u51b3\u65b9\u6848 A \u4e0b\u5217\u5e38\u89c1\u7684\u7cfb\u7edf\u5b9a\u4e49\u7684\u5f02\u5e38\u4e2d\uff0c\u54ea\u4e00\u4e2a\u662f\u8f93\u5165\u3001\u8f93\u51fa\u5f02\u5e38\uff1f A. ClassNotFoundException B. IOException C. InterruptedException D. UnknownHostException \u89e3\u51b3\u65b9\u6848 B \u54ea\u4e2a\u5173\u952e\u5b57\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff1f A. transient B. finally C. throw D. static \u89e3\u51b3\u65b9\u6848 C \u4f8b\u5916\u5904\u7406\u8fc7\u7a0b\u4e2d\u5bf9\u4e8ecatch\u5b50\u53e5\u7684\u6392\u5217\uff0c\u4e0b\u5217\u54ea\u79cd\u662f\u6b63\u786e\u7684\uff1f A. \u7236\u7c7b\u5728\u5148\uff0c\u5b50\u7c7b\u5728\u540e B. \u5b50\u7c7b\u5728\u5148\uff0c\u7236\u7c7b\u5728\u540e C. \u6709\u7ee7\u627f\u5173\u7cfb\u7684\u5f02\u5e38\u4e0d\u80fd\u5728\u540c\u4e00\u4e2atry\u7a0b\u5e8f\u6bb5\u5185 D. \u5148\u6709\u5b50\u7c7b\uff0c\u5176\u4ed6\u5982\u4f55\u6392\u5217\u90fd\u65e0\u5173 \u89e3\u51b3\u65b9\u6848 B throws\u7684\u4f5c\u7528\u662f\uff1a A. \u6ca1\u6709\u610f\u4e49 B. \u8868\u793a\u540e\u9762\u662f\u65b9\u6cd5\u7684\u8f93\u51fa\u503c C. \u8868\u793a\u65b9\u6cd5\u53ef\u80fd\u4f1a\u629b\u51fa\u4f8b\u5916 D. \u65b9\u6cd5\u7684\u6807\u5fd7\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u5fc5\u987b\u6709 \u89e3\u51b3\u65b9\u6848 C","title":"7 \u4f8b\u5916\u5904\u7406"},{"location":"uooc/java/7/#71","text":"","title":"7.1 \u5904\u7406\u5f02\u5e38"},{"location":"uooc/java/7/#_1","text":"A. \u6355\u83b7\u5f02\u5e38 B. \u629b\u51fa\u5f02\u5e38 C. \u58f0\u660e\u5f02\u5e38 D. \u5d4c\u5957\u5f02\u5e38","title":"\u5f53\u65b9\u6cd5\u9047\u5230\u5f02\u5e38\u53c8\u4e0d\u77e5\u5982\u4f55\u5904\u7406\u65f6\uff0c\u4e0b\u5217\u54ea\u79cd\u8bf4\u6cd5\u662f\u6b63\u786e\u7684\uff1f"},{"location":"uooc/java/7/#_2","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#_3","text":"A. java.io.Exception B. java.lang.Throwable C. java.lang.Exception D. java.lang.Error","title":"\u8bf7\u95ee\u6240\u6709\u7684\u5f02\u5e38\u7c7b\u7686\u7ee7\u627f\u54ea\u4e00\u4e2a\u7c7b\uff1f"},{"location":"uooc/java/7/#_4","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#_5","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u5f02\u5e38\u662f\u7a0b\u5e8f\u9519\u8bef\u6216\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u9519\u8bef\u7684\u4e0d\u6b63\u5e38\u72b6\u6001\u3002"},{"location":"uooc/java/7/#_6","text":"A","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#_7","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u5f53\u4e00\u4e2a\u65b9\u6cd5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\uff0c\u5219\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u7ec8\u6b62\uff0c\u4f46\u662f\u6574\u4e2a\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u7ec8\u6b62\u8fd0\u884c\u3002"},{"location":"uooc/java/7/#_8","text":"A","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#72","text":"","title":"7.2 \u4f8b\u5916\u5904\u7406\u673a\u5236"},{"location":"uooc/java/7/#javaerror-cannot-read-aaajava","text":"A. \u539f\u56e0\u662f\u6267\u884c\u7684\u5f53\u524d\u76ee\u5f55\u4e0b\u6ca1\u6709\u627e\u5230aaa.java\u6587\u4ef6 B. \u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5JDK\u5f00\u53d1\u73af\u5883\u3002 C. \u539f\u56e0\u662fjava\u6e90\u6587\u4ef6\u540d\u540e\u7f00\u4e00\u5b9a\u662f\u4ee5 .txt \u7ed3\u5c3e\u3002 D. \u539f\u56e0\u662fJDK\u5b89\u88c5\u540e\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfPATH\u548cClasspath \u3002","title":"\u7f16\u8bd1java\u7a0b\u5e8f\u65f6\u51fa\u73b0error: cannot read: aaa.java\uff0c\u5219\u4e0b\u5217\u539f\u56e0\u6700\u6b63\u786e\u7684\u662f\uff1f"},{"location":"uooc/java/7/#_9","text":"A","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#_10","text":"A. ClassNotFoundException B. IOException C. InterruptedException D. UnknownHostException","title":"\u4e0b\u5217\u5e38\u89c1\u7684\u7cfb\u7edf\u5b9a\u4e49\u7684\u5f02\u5e38\u4e2d\uff0c\u54ea\u4e00\u4e2a\u662f\u8f93\u5165\u3001\u8f93\u51fa\u5f02\u5e38\uff1f"},{"location":"uooc/java/7/#_11","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#_12","text":"A. transient B. finally C. throw D. static","title":"\u54ea\u4e2a\u5173\u952e\u5b57\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff1f"},{"location":"uooc/java/7/#_13","text":"C","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#catch","text":"A. \u7236\u7c7b\u5728\u5148\uff0c\u5b50\u7c7b\u5728\u540e B. \u5b50\u7c7b\u5728\u5148\uff0c\u7236\u7c7b\u5728\u540e C. \u6709\u7ee7\u627f\u5173\u7cfb\u7684\u5f02\u5e38\u4e0d\u80fd\u5728\u540c\u4e00\u4e2atry\u7a0b\u5e8f\u6bb5\u5185 D. \u5148\u6709\u5b50\u7c7b\uff0c\u5176\u4ed6\u5982\u4f55\u6392\u5217\u90fd\u65e0\u5173","title":"\u4f8b\u5916\u5904\u7406\u8fc7\u7a0b\u4e2d\u5bf9\u4e8ecatch\u5b50\u53e5\u7684\u6392\u5217\uff0c\u4e0b\u5217\u54ea\u79cd\u662f\u6b63\u786e\u7684\uff1f"},{"location":"uooc/java/7/#_14","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/7/#throws","text":"A. \u6ca1\u6709\u610f\u4e49 B. \u8868\u793a\u540e\u9762\u662f\u65b9\u6cd5\u7684\u8f93\u51fa\u503c C. \u8868\u793a\u65b9\u6cd5\u53ef\u80fd\u4f1a\u629b\u51fa\u4f8b\u5916 D. \u65b9\u6cd5\u7684\u6807\u5fd7\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u5fc5\u987b\u6709","title":"throws\u7684\u4f5c\u7528\u662f\uff1a"},{"location":"uooc/java/7/#_15","text":"C","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/8/","text":"8.1File\u7c7b \u53ef\u4ee5\u4f7f\u7528File\u7c7b\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u91cc\u7684\u5185\u5bb9\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B 8.2 \u8f93\u5165\u8f93\u51fa\u6d41 \u4e0b\u5217InputStream\u7c7b\u4e2d _ \u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u5173\u95ed\u6d41\uff1f A. skip() B. reset() C. close() D. mark() \u89e3\u51b3\u65b9\u6848 C \u4f7f\u7528FileInputStream\u7c7b\uff0c\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u6309\u5b57\u7b26\u8bfb\u5165\u6570\u636e\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B","title":"8 File\u7c7b\u4e0e\u8f93\u5165\u8f93\u51fa\u6d41"},{"location":"uooc/java/8/#81file","text":"","title":"8.1File\u7c7b"},{"location":"uooc/java/8/#file","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u53ef\u4ee5\u4f7f\u7528File\u7c7b\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u91cc\u7684\u5185\u5bb9\u3002"},{"location":"uooc/java/8/#_1","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/8/#82","text":"","title":"8.2 \u8f93\u5165\u8f93\u51fa\u6d41"},{"location":"uooc/java/8/#inputstream_","text":"A. skip() B. reset() C. close() D. mark()","title":"\u4e0b\u5217InputStream\u7c7b\u4e2d_\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u5173\u95ed\u6d41\uff1f"},{"location":"uooc/java/8/#_2","text":"C","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/8/#fileinputstream","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u4f7f\u7528FileInputStream\u7c7b\uff0c\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u6309\u5b57\u7b26\u8bfb\u5165\u6570\u636e\u3002"},{"location":"uooc/java/8/#_3","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/","text":"9.2 \u7a97\u4f53 \u4f7f\u7528Swing\u7f16\u7a0b\u65f6\uff0c\u5982\u679c\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u9700\u8981\u4f7f\u7528\u54ea\u51e0\u79cd\u7ebf\u7a0b\uff1a A. \u521d\u59cb\u5316\u7ebf\u7a0b B. \u4e8b\u4ef6\u8c03\u5ea6\u7ebf\u7a0b C. \u5de5\u4f5c\u7ebf\u7a0b \u89e3\u51b3\u65b9\u6848 ABC 9.3 \u83dc\u5355 \u5feb\u6377\u952e\u662f\u4e3a\u4e86\u63d0\u5347\u6548\u7387\u800c\u8bbe\uff0c\u83dc\u5355\u9879\u4e00\u5b9a\u8981\u8bbe\u7f6e\u5feb\u6377\u952e\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B \u52a9\u8bb0\u7b26\u662f\u4e3a\u4e86\u63d0\u5347\u6548\u7387\u800c\u8bbe\uff0c\u83dc\u5355\u9879\u4e00\u5b9a\u8981\u8bbe\u7f6e\u52a9\u8bb0\u7b26\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B 9.4 \u5e03\u5c40\u7ba1\u7406 \u4e3a\u4e86\u5b9e\u73b0\u590d\u6742\u7684\u754c\u9762\u5e03\u5c40\uff0cJFrame\u7684\u5185\u5bb9\u533a\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2aLayout\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B 9.5 \u5e38\u7528\u7ec4\u4ef6 \u5bc6\u7801\u6846\u7c7bJPasswordField\u662f\u6587\u672c\u6846\u7c7bJTextField\u7684\u5b50\u7c7b\u3002\u6587\u672c\u6846\u7528JTextField.getText()\u83b7\u53d6\u6587\u672c\u5185\u5bb9\uff0c\u5bc6\u7801\u6846\u53ef\u4ee5\u4f7f\u7528JPasswordField.getText()\u83b7\u53d6\u5bc6\u7801\u6587\u672c\u3002 A. \u6b63\u786e B. \u9519\u8bef \u89e3\u51b3\u65b9\u6848 B 9.6 \u5e38\u7528\u5bf9\u8bdd\u6846 String s = JOptionPane . showInputDialog ( frame , \"\u8bf7\u8f93\u5165\u60a8\u6240\u5728\u57ce\u5e02\u540d\u79f0\uff1a\" ); \u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u540e\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u8f93\u5165\u5bf9\u8bdd\u6846\uff0c\u5982\u679c\u7528\u6237\u70b9\u51fb\u5bf9\u8bdd\u6846\u53f3\u4e0a\u89d2\u4e0a\u7684\u201cX\u201d\u56fe\u6807\uff08\u5173\u95ed\u6309\u94ae\uff09\uff0c\u90a3\u4e48\u8fd4\u56de\u503cs\u662f\uff1a A. \"\" B. null C. NULL D. false \u89e3\u51b3\u65b9\u6848 B 9.7 \u4e8b\u4ef6\u5904\u7406 \u4e0b\u9762\u54ea\u4e9b\u662f\u6b63\u786e\u7684\uff1f A. MouseAdapter\u662f\u4e00\u4e2a\u7c7b B. MouseAdapter\u662f\u4e00\u4e2a\u63a5\u53e3 C. MouseListener\u662f\u4e00\u4e2a\u7c7b D. MouseListener\u662f\u4e00\u4e2a\u63a5\u53e3 \u89e3\u51b3\u65b9\u6848 AD","title":"9 \u56fe\u5f62\u7528\u6237\u754c\u9762\u8bbe\u8ba1"},{"location":"uooc/java/9/#92","text":"","title":"9.2 \u7a97\u4f53"},{"location":"uooc/java/9/#swing","text":"A. \u521d\u59cb\u5316\u7ebf\u7a0b B. \u4e8b\u4ef6\u8c03\u5ea6\u7ebf\u7a0b C. \u5de5\u4f5c\u7ebf\u7a0b","title":"\u4f7f\u7528Swing\u7f16\u7a0b\u65f6\uff0c\u5982\u679c\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u9700\u8981\u4f7f\u7528\u54ea\u51e0\u79cd\u7ebf\u7a0b\uff1a"},{"location":"uooc/java/9/#_1","text":"ABC","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/#93","text":"","title":"9.3 \u83dc\u5355"},{"location":"uooc/java/9/#_2","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u5feb\u6377\u952e\u662f\u4e3a\u4e86\u63d0\u5347\u6548\u7387\u800c\u8bbe\uff0c\u83dc\u5355\u9879\u4e00\u5b9a\u8981\u8bbe\u7f6e\u5feb\u6377\u952e\u3002"},{"location":"uooc/java/9/#_3","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/#_4","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u52a9\u8bb0\u7b26\u662f\u4e3a\u4e86\u63d0\u5347\u6548\u7387\u800c\u8bbe\uff0c\u83dc\u5355\u9879\u4e00\u5b9a\u8981\u8bbe\u7f6e\u52a9\u8bb0\u7b26\u3002"},{"location":"uooc/java/9/#_5","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/#94","text":"","title":"9.4 \u5e03\u5c40\u7ba1\u7406"},{"location":"uooc/java/9/#jframelayout","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u4e3a\u4e86\u5b9e\u73b0\u590d\u6742\u7684\u754c\u9762\u5e03\u5c40\uff0cJFrame\u7684\u5185\u5bb9\u533a\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2aLayout\u3002"},{"location":"uooc/java/9/#_6","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/#95","text":"","title":"9.5 \u5e38\u7528\u7ec4\u4ef6"},{"location":"uooc/java/9/#jpasswordfieldjtextfieldjtextfieldgettextjpasswordfieldgettext","text":"A. \u6b63\u786e B. \u9519\u8bef","title":"\u5bc6\u7801\u6846\u7c7bJPasswordField\u662f\u6587\u672c\u6846\u7c7bJTextField\u7684\u5b50\u7c7b\u3002\u6587\u672c\u6846\u7528JTextField.getText()\u83b7\u53d6\u6587\u672c\u5185\u5bb9\uff0c\u5bc6\u7801\u6846\u53ef\u4ee5\u4f7f\u7528JPasswordField.getText()\u83b7\u53d6\u5bc6\u7801\u6587\u672c\u3002"},{"location":"uooc/java/9/#_7","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/#96","text":"String s = JOptionPane . showInputDialog ( frame , \"\u8bf7\u8f93\u5165\u60a8\u6240\u5728\u57ce\u5e02\u540d\u79f0\uff1a\" );","title":"9.6 \u5e38\u7528\u5bf9\u8bdd\u6846"},{"location":"uooc/java/9/#xs","text":"A. \"\" B. null C. NULL D. false","title":"\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u540e\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u8f93\u5165\u5bf9\u8bdd\u6846\uff0c\u5982\u679c\u7528\u6237\u70b9\u51fb\u5bf9\u8bdd\u6846\u53f3\u4e0a\u89d2\u4e0a\u7684\u201cX\u201d\u56fe\u6807\uff08\u5173\u95ed\u6309\u94ae\uff09\uff0c\u90a3\u4e48\u8fd4\u56de\u503cs\u662f\uff1a"},{"location":"uooc/java/9/#_8","text":"B","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"uooc/java/9/#97","text":"","title":"9.7 \u4e8b\u4ef6\u5904\u7406"},{"location":"uooc/java/9/#_9","text":"A. MouseAdapter\u662f\u4e00\u4e2a\u7c7b B. MouseAdapter\u662f\u4e00\u4e2a\u63a5\u53e3 C. MouseListener\u662f\u4e00\u4e2a\u7c7b D. MouseListener\u662f\u4e00\u4e2a\u63a5\u53e3","title":"\u4e0b\u9762\u54ea\u4e9b\u662f\u6b63\u786e\u7684\uff1f"},{"location":"uooc/java/9/#_10","text":"AD","title":"\u89e3\u51b3\u65b9\u6848"}]}